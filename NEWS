                     User-Visible rra-c-util Changes

rra-c-util 3.3 (2011-04-28)

    When binding IPv6 sockets, restrict them to only IPv6 connections
    rather than also allowing IPv4 connections where possible.  The
    default behavior, for maximum backward compatibility, is for
    IPv6-bound sockets to accept IPv4 connections and expose those
    connections as IPv4 mapped addresses.  This causes various problems,
    however, such as with reuse of bound ports (which was causing test
    suite failures) and requirements to handle IPv4 mapped addresses.  The
    network model (also used by BSD systems) where IPv6 sockets only
    accept IPv6 connections is cleaner, even if it requires juggling
    multiple sockets in some situations.

    The gssapi.m4 Autoconf macros now handle the bundled Heimdal on
    OpenBSD that doesn't have a separate libroken.  Thanks to Antoine
    Verheijen for the analysis.

    Define the KRB5_USES_COM_ERR Automake conditional to false when
    --without-krb5 is used rather than leaving it undefined, since the
    latter can cause configure failures.  Patch from Andrew Deason.

    Fix underquoting in m4/socket.m4.

    Add a test of krb5_realm to configure.ac so that pam-util will compile
    with Heimdal.  Also fix kafs compilation flags to build properly with
    Heimdal kafs if it's in a non-standard path.

    Update to C TAP Harness 1.7:

    * Add more complete usage message and -h option to runtests.

rra-c-util 3.2 (2011-03-03)

    In the strndup replacement, check if the string being duplicated is
    NULL, and if so, return NULL and set errno to EINVAL rather than
    segfaulting.  Thanks, Carsten Hey.

    Zero sockaddr_in and sockaddr_in6 in the network library before using
    one, just in case non-zeroed padding bytes might cause problems.
    Thanks, Bo Lindbergh.

rra-c-util 3.1 (2011-01-23)

    Add a replacement for a missing strndup (not available on Mac OS X).

    Fix compilation of the embedded kafs layer for Mac OS X 10.6 and
    hopefully fix detection of whether AFS is present.  Thanks, Andy
    Cobaugh.

    Add vector_copy, vector_exec, and vector_exec_env to the pam-util
    vector library.  Fix vector_clear to not attempt to free strings that
    are NULL.  Fix broken GCC attribute markers on the pam-util vector
    library, which could cause compilation problems with non-GCC
    compilers.

    Add a new type of configuration parameter to the pam-util option
    parser that stores a vector but takes its default value as a string
    (which will be split the way that a PAM option setting would be
    split).

    When probing for Kerberos libraries, always add any supplemental
    libraries found to that point to the link command.  This will fix
    configure failures on platforms without working transitive shared
    library dependencies.

    When probing for <ibm_svc/krb5_svc.h> (part of AIX's bundled Kerberos
    implementation), include <krb5.h> before attempting to include that
    header to quiet confusing Autoconf warnings.  Reported by Wilfried
    Weiss.

    Add explicit license statements to the files meant to be copied into
    other packages rather than referring to LICENSE.

rra-c-util 3.0 (2010-12-29)

    Add a PAM utility library to assist in developing PAM modules.  This
    utility library provides functions for logging and table-driven option
    parsing, including reading options from krb5.conf.  It also provides a
    version of the util/vector.c library that doesn't die on memory
    allocation failure and hence is suitable for use in PAM modules.

    Add a fake PAM library used for testing PAM modules.  This fake PAM
    library provides just enough of the PAM library functionality to make
    PAM module function calls into a single module, but doesn't look at
    the system-wide configuration, allowing PAM modules to be more easily
    tested without changes to the system configuration.  It also allows
    test programs to inspect the internals of the PAM state.

    Add untested support for the ioctl AFS system call methods on Mac OS X
    and Solaris 11 to the kafs replacement library.

    Add a replacement for k_haspag for use with either the kafs
    replacement library or for systems with a libkafs or libkopenafs that
    don't have that function.

    Export k_pioctl from the kafs replacement library and provide a
    definition of struct ViceIoctl.  This is mainly for the use of
    k_haspag, but may prove useful for making other AFS system calls.

    Move kafs/kafs.h to portable/kafs.h, since it's more a portability
    header than a header solely for the kafs replacement library.

    Fix the --with-libkafs-lib and --with-libkafs-include configure
    options to work properly.

    Properly include prerequisite Kerberos and ioctl headers before
    including the Heimdal kafs.h header.

    Add handling of krb5_free_default_realm and krb5_init_secure_context
    to the Kerberos portability layer.

    Add a replacement for missing krb5_appdefault_* functions for
    compatibility with AIX's included Kerberos, which provides the profile
    library but not the Kerberos interface to query it.

    Fix broken GCC attribute markers causing problems with compilation on
    Windows (and likely any non-GCC compiler).

    Update to C TAP Harness 1.6:

    * Better error handling if BUILD or SOURCE aren't set.
    * Flush standard error before results in the C TAP library.
    * Improve test failure output formatting in some edge cases.

rra-c-util 2.7 (2010-09-20)

    For Kerberos and GSS-API checks, look for krb5-config in
    /usr/kerberos/bin after checking the user's PATH.  This is the default
    location on Red Hat Enterprise prior to RHEL6.

    Enable all configure logic in configure.ac that was previously
    commented out so that it is tested when building rra-c-util.  Building
    this package directly will now require working GSS-API libraries, but
    since it already required working Kerberos libraries, this should not
    make a noticable difference.

rra-c-util 2.6 (2010-08-25)

    Add portability code for old MIT Kerberos and Heimdal libraries
    without krb5_get_init_creds_opt_free.

    When probing for Apache module build flags, call apr-config --includes
    and add it to the preprocessor flags.  Fixes build failures on Red Hat
    Enterprise Linux 4 and 5.

    When probing for UNIX domain sockets, include <sys/types.h> before
    <sys/socket.h> so that the test program compiles on OpenBSD.  Thanks,
    Wim Lewis.

    Add new test library function ktutil_list to output details of the
    contents of a keytab, used to compare two keytabs.

    Fix determination of the test principal in the kerberos.sh and
    remctl.sh test libraries.

    Properly include the Apache, cURL, OpenLDAP, OpenSSL, PCRE, and ld
    --version-script M4 checks in the distribution.

rra-c-util 2.5 (2010-07-07)

    Add an Autoconf macro set to locate the compiler and linker flags for
    Apache modules, allowing those modules to be built without using apxs
    to do the compilation and linking.

    Add Autoconf macros for detecting cURL, OpenLDAP, and OpenSSL
    libraries.

    Add an Autoconf macro that checks whether the linker supports the
    --version-script flag with a simple version script that just assigns
    symbol versions and marks some symbols as local.

    Add vector_split_multi and cvector_split_multi functions to
    util/vector.h, which split a string into a vector using any character
    found in a string of separators as a separator.

    Add a replacement for the Solaris issetuidgid function.

    Add Kerberos portability glue for krb5_data_free versus
    krb5_free_data_contents and improve checking for krb5_kt_free_entry
    with older versions of MIT Kerberos.

    The krb5.m4 Autoconf macros now handle the bundled Heimdal on OpenBSD
    that doesn't have a separate libroken.  If KRB5_CPPFLAGS,
    KRB5_LDFLAGS, or KRB5_LIBS are set before calling the macro, their
    values will be preserved and added to whatever the macro sets, which
    allows the caller to set up custom values for particular operating
    systems.

    Restore the default CPPFLAGS, LDFLAGS, and LIBS after probing for
    GSS-API libraries with --enable-reduced-depends.  Previously, the
    default variables were left containing extra GSS-API-specific flags.

    Allow users to suppress including config.h in portable/krb5.h so that
    the Kerberos portability code can be used in situations where a
    stripped-down config.h is needed, such as Apache modules.

    Update to C TAP Harness 1.4:

    * Add tests/HOWTO from docs/writing-tests in C TAP Harness.
    * Add okv and test_file_path functions to the basic TAP library.
    * Use test_file_path in kerberos_setup, kerberos.sh, and remctl.sh.

rra-c-util 2.4 (2010-04-22)

    Add Autoconf macros to probe for the PCRE library, using pcre-config
    where possible and falling back on direct probing.

    Fix definition of replacement krb5_free_error_message to not be
    static.

    Fix header guard for util/xwrite.h.  Previously, the header would be
    incorrectly skipped if util/xmalloc.h was already included.

    Update to C TAP Harness 1.2:

    * Add diag and sysdiag functions to the basic TAP library.
    * Clean up data types in the basic C TAP library.
    * Add the GCC nonnull attribute to the TAP library bail functions.

rra-c-util 2.3 (2010-02-15)

    Add a portability layer for the Kerberos API, which supplies something
    close to the Heimdal Kerberos API on either MIT or Heimdal and adjusts
    with functions missing from older versions.  Use it in the Kerberos
    TAP test module.

    Add die and warn wrappers for Kerberos errors to the utility library.

    Add a portability wrapper around PAM libraries and replacements for
    pam_syslog and pam_vsyslog, and an Autoconf macro to determine whether
    the PAM library headers use const.

    Add a new TAP add-on for running a function in a separate process and
    then checking its exit status and output.

    Disable the xmalloc test except for maintainers.  It's too fragile,
    and isn't catching problems with xmalloc itself.

    Adjust the Kerberos TAP test library add-ons for the split of
    util/util.h.

rra-c-util 2.2 (2010-01-18)

    Break util/util.h apart into separate header files for every utility
    function grouping.  This requires include changes in all packages
    importing rra-c-util, but makes it much easier to update header file
    changes for only those components that a downstream package users.

    Add the GCC function attributes alloc_size, malloc, and nonnull to the
    prototypes for utility functions where appropriate, and add the format
    attribute to xasprintf.

    kafs/kafs.h now defines HAVE_KAFS if any form of AFS support is
    available.  This allows programs using it to, for instance, display
    different help output based on whether AFS support is compiled in (as
    opposed to available on the current system, which is what k_hasafs
    determines).

    Improve error handling when network_connect or network_client_create
    are called with an unknown address domain for the source address.

    Switch to AC_TYPE_LONG_LONG_INT instead of AC_CHECK_TYPES([long long])
    as provided by newer Autoconfs, and change the snprintf replacement to
    assume the compiler provides long double.

    Remove unnecessary dependencies on the util library in the portable
    test suite.

rra-c-util 2.1 (2009-11-25)

    Add a new Autoconf macro, RRA_SET_LIBDIR, which sets the libdir
    variable based on the size of an integer in the compilation
    environment and whether /usr/lib32 or /usr/lib64 exist.

    Use a socket_type typedef rather than int directly to store the file
    descriptors of sockets and, on Windows, typedef that to SOCKET instead
    of int.  Update the function signatures of the network utility
    functions appropriately.  Compare socket_type variables against an
    INVALID_SOCKET define instead of -1.  Fixes portability issues to
    64-bit Windows.  Thanks, Jeffrey Altman.

    Add a cast to the log handler for Windows so that it works properly on
    64-bit Windows.  Thanks, Jeffrey Altman.

rra-c-util 2.0 (2009-08-15)

    Add a replacement for the libkafs library for AFS PAG and token
    manipulation.  This is a minimal version of the library with no
    external dependencies on Linux and only minimal AFS dependencies on
    other platforms that implements just enough of libkafs functionality
    to support pam-afs-session and kstart.  This is a somewhat-modified
    version of the kafs replacement files in kstart 3.14 that uses a
    separate library directory and Automake conditionals rather than
    AC_LIBOBJ and the portable directory and supports more specific
    configure options.

    Revert the separation of the message functions that call exit into a
    separate source file.  Unfortunately, even as a separate source file,
    it's still linked into shared libraries, so the additional code
    duplication isn't worth it.

    Add a replacement for mkstemp on systems that don't have it.

    If krb5-config produces results that don't work for Kerberos v5 of
    GSS-API probes, fall back on manual library probing rather than just
    failing.  This fixes problems with GSS-API probes on Solaris where
    krb5-config is present but doesn't know about GSS-API.  Thanks to Andy
    Cobaugh for the report.

    Suppress error output from krb5-config in Kerberos v5 and GSS-API
    probes so that it's not mixed in with configure output.

    Do not try to use a non-executable krb5-config for GSS-API probes and
    prefer the KRB5_CONFIG environment variable over a path constructed
    from the --with-gssapi argument.

    Add m4/krb4.m4, which probes for Kerberos v4 libraries in the same
    ways that m4/krb5.m4 probes for Kerberos v5 libraries.

    Add a portability wrapper around Kerberos v4 headers and replacements
    for Kerberos v4 lifetime functions for implementations that don't have
    them.

    Add m4/socket-unix.m4, which contains some probes for UNIX domain
    socket support taken from INN with modifications by Julien ÉLIE.

    RRA_SET_LDFLAGS (m4/lib-pathname.m4) now appends to the variable
    rather than only setting it and takes an optional third argument
    naming a subdirectory of the library directory to add to the library
    search path.

    Enable GCC format string checking for the replacement asprintf
    function.

    Use AS_HELP_STRING instead of the deprecated AC_HELP_STRING in all
    Autoconf m4 files.

    Fix network test suite failures when IPv6 is available but disabled
    in the kernel.

    Enable Automake silent rules.  For a quieter build, pass the
    --enable-silent-rules option to configure or build with make V=0.

    Update to C TAP Harness 1.1:

    * Summarize results at the end of test executions.
    * Consume all output from a test case before closing its descriptor.

rra-c-util 1.0 (2009-05-22)

    Initial public release based on the portability code that shipped with
    remctl 2.13 with some additional files from other current releases of
    my software packages.  The changes below are relative to that version.

    Separate out the message functions that call exit to a separate source
    file and therefore a separate object file.  This will mean that shared
    libraries that don't call die won't link this file and hence won't
    include a reference to exit, which will avoid errors from some package
    test tools.

    Add a vector_addn function that adds a counted string to a vector
    (similar to strndup).  There is no cvector equivalent.

    On BSD/OS, despite the AI_ADDRCONFIG flag being present in the system
    headers, passing it into getaddrinfo results in an error.  Test for
    this at configure time and, if it doesn't work, hide the system
    AI_ADDRCONFIG definition.

    Remove RRA_LIB_*_SET functions.  When using Automake, one should never
    put one's own flags into the CPPFLAGS, CFLAGS, and LDFLAGS variables,
    since the user may override them.  Instead, AM_* versions should be
    set in Makefile.am.  This can be done using the existing substitution
    variables, so the *_SET functions were always wrong.

    Declare message_fatal_cleanup extern in util.h.  Fixes compilation
    problems on Mac OS X and probably elsewhere.

    Update GSS-API probes for portability to Solaris 10's native generic
    GSS-API libraries.  Thanks, Peter Eriksson.

    Change from AC_TRY_* to AC_*_IFELSE for all Autoconf macros.

    Update the example configure.ac for Autoconf 2.63, adding
    AC_CONFIG_MACRO_DIR and using AC_USE_SYSTEM_EXTENSIONS instead of
    AC_AIX and AC_GNU_SOURCE.

    Specify a mode when creating a sentinel in the daemon test.  This
    fixes compiler warnings with newer gcc.

    Updated test suite to the current version of C TAP Harness and its C
    TAP library.  Rewrite the extra functions that were in libtest as
    add-ons to the TAP library.

    Add a TAP test library Kerberos initialization function to use the
    native Kerberos library functions as well as a version that calls
    kinit.  The former will be more useful for packages that already
    depend on the Kerberos libraries.

    Add TAP test library functions to clean up the Kerberos ticket cache
    and to cleanly shut down remctld.

    Add TAP shell libraries for initializing Kerberos and starting and
    stopping remctld.

    Make the xmalloc test suite robust against builddir != srcdir builds
    that change the default file name of the test program.
