                     User-Visible rra-c-util Changes

rra-c-util 4.7 (unreleased)

    Add new portability wrapper for sys/statvfs.h that converts statvfs
    code to statfs code for older systems.

    When probing for Heimdal's libroken, probe for roken_concat (present
    since at least Heimdal 0.4) instead of rk_simple_execve (not present
    until Heimdal 1.3).

    portable/apr.h now includes apr_errno.h, apr_file_info.h, and
    apr_file_io.h and handles backwards compatibility of the APR_FOPEN_*
    flags and APR_FPROT_* constants to APR 0.9.

    Probe for Kerberos headers using file existence checks instead of the
    compiler if a Kerberos root or include path was given.  Otherwise, the
    compiler may find the wrong header in the system default include path
    and incorrectly assume krb5.h should be used instead of krb5/krb5.h.

    Add a valgrind suppression file in tests/data that is suitable for
    other projects using rra-c-util, particularly ones using Kerberos.

rra-c-util 4.6 (2012-09-17)

    Drop concat and concatpath from the util library.  asprintf or
    xasprintf, provided by the portability and util libraries
    respectively, are entirely superior alternatives to concat.
    concatpath was only used in INN and will be reintroduced if I end up
    using it in my other software.

    xasprintf and xvasprintf (in the util library) and basprintf and
    bvasprintf (in the TAP add-on) are now void functions and always call
    the xmalloc failure handler on any error, not just on ENOMEM errors.
    The faint chance that the underlying asprintf function could return
    some other error isn't worth the additional code complexity of still
    having to check the return status and then probably abort anyway.

    Add POD documentation for xmalloc, xcalloc, and xrealloc.

    In the replacement kafs library, fix a compilation failure on Solaris
    11 or later.

    Add an RRA_INCLUDES_APACHE macro to m4/apache.m4 that can be used to
    include a basic set of Apache headers when probing for declarations
    relevant to Apache modules.

    Strip -g and -On flags from APACHE_CPPFLAGS as returned by apxs to
    avoid forcing debugging and optimization strategy for Apache modules.

rra-c-util 4.5 (2012-05-31)

    In the PAM utility library, cope with a NULL pam_args structure in
    putil_args_free and in EXIT logging to make handling of failure to
    allocate the pam_args structure simpler.

    Add KRB5_WELLKNOWN_NAME and KRB5_ANON_NAME to the Kerberos portability
    header, used to form the anonymous principal name.

    Add a replacement for krb5_free_string to the Kerberos portability
    header.

    In the PAM testing library, do not set a default value for the user
    but use the user member of the config struct without modification,
    even if it's NULL.  This allows testing of PAM calls where no user is
    set.

rra-c-util 4.4 (2012-05-11)

    In the PAM utility logging functions, do not include a colon, space,
    and the PAM error if the provided PAM status was PAM_SUCCESS.

    Add regular expression support to the PAM test library.  Both output
    lines and PAM prompts can now be extended regular expressions instead
    of strings, indicated by surrounding them with slashes (/), and the
    actual output or prompt will be matched against the regular
    expression.  If regular expression support is not available, the test
    will be skipped.

    Support for the %* wildcard in output in PAM test scripts has been
    removed.  Use regular expressions instead.

    The fakepam library now separates the priority from the log line when
    recording output from the PAM module instead of appending a string
    representation of the priority to the beginning of the output line.
    The layout of the output struct (returned by pam_output) has changed
    accordingly.

    In the PAM testing framework, don't copy the provided password into
    the PAM_AUTHTOK item.  Instead, take new configuration parameters
    authtok and oldauthtok that, if provided, are copied into the PAM data
    before running the script.  This allows separate testing of a saved
    password and a password provided at a prompt.  Document in the fakepam
    README file all of the possible configuration parameters.

    Various minor improvements to the scripted PAM testing framework: add
    PAM_AUTHINFO_UNAVAIL to the recognized PAM error codes, report output
    and prompt lines starting from 1 instead of 0, and report an error
    message rather than segfaulting if necessary parameters for a testing
    script are not provided.

    The RRA_KRB5_CONFIG helper macro for Kerberos library probes now
    checks whether --deps is supported by krb5-config and, if so, passes
    it in unless --enable-reduced-depends was passed to configure.  This
    will fix link issues on some platforms where all dependency libraries
    need to be linked to ensure proper behavior.

    RRA_LIB_GSSAPI and RRA_LIB_KRB5 have been modified to use
    RRA_KRB5_CONFIG instead of duplicating their own krb5-config logic.
    This includes picking up the above change to use --deps if available.
    If including m4/gssapi.m4 or m4/krb5.m4 in another package, one must
    now also copy m4/krb5-config.m4.

    RRA_LIB_GSSAPI no longer calls krb5-config with no arguments if the
    gssapi argument isn't supported and instead falls back to manual
    library probing.  This is only relevant for very old versions of
    Kerberos.

    In the Kerberos TAP add-on, fix cleanup handling of user password
    configuration and repeatedly-generated krb5.conf files.

    Avoid using local in the remctl.sh and kerberos.sh TAP libraries and
    instead use a tap_ prefix on variables, for portability to Solaris
    /bin/sh.  Also avoid using test_file_path or test_tmpdir in backquotes
    inside double quotes to avoid a quoting bug in Solaris /bin/sh.

    Make the __attribute__ handling in portable/macros.h more aware of
    different versions and compilers.  All attributes are now suppressed
    for GCC older than 2.96 (instead of 2.7), since __malloc__ became
    available then.  __alloc_size__ is suppressed for GCC older than 4.3.
    Warnings about unknown diagnostics are suppressed for LLVM and Clang,
    which pretend to be GCC but don't support all the same attributes.

    Fix several portability bugs in the network test suite.  Patch from
    Jeffrey Hutzelman.

    Update to C TAP Harness 1.12:

    * Add UNUSED macro to tests/tap/macros.h for other TAP add-ons.
    * Suppress plan and summary if bail is called before any tests run.
    * Remove additional uses of local in tests/tap/libtap.sh.
    * Silence __attribute__ warnings on more compilers.

rra-c-util 4.3 (2012-04-26)

    Remove the bool arguments to buffer_sprintf and buffer_vsprintf and
    instead introduce new buffer_append_sprintf and _vsprintf functions to
    append to the buffer, which is what the functions did with a true
    argument.  This avoids having a bool argument to functions, the
    meaning of which is often obscure in the calling code.

    Probe for GSS-API headers using file existence checks instead of the
    compiler if a GSS-API root or include path was given.  Otherwise, the
    compiler may find the wrong header in the system default include path
    and incorrectly assume gssapi/gssapi.h should be used instead of
    gssapi.h.  Thanks to Jeffrey Hutzelman for the idea.

    Add a new RRA_INCLUDES_GSSAPI macro that can be used to get a set of
    standard includes when probing for GSS-API library features.

    Move the probes for GSS-API include files and OID definitions into
    RRA_LIB_GSSAPI, since there's no downside to always running them.

    Set rra_use_remctl to true in RRA_LIB_REMCTL_OPTIONAL if remctl
    libraries were found, following the documentation.

    Add parameter expansion support in the PAM options section to the PAM
    test script parser.

    Update to C TAP Harness 1.11:

    * Only use feature-test macros when requested or built with gcc -ansi.
    * New tests/tap/macros.h header with some common definitions.
    * Drop is_double from the C TAP library to avoid requiring -lm.
    * Avoid using local in the shell libtap.sh library.

rra-c-util 4.2 (2012-02-29)

    Add new network_read and network_write functions to the network
    utility library, which read from and write to network sockets with an
    optional timeout.

    Fix replacement strndup function to not assume that the string being
    duplicated is nul-terminated.

    Avoid excessive memory allocation when duplicating short
    nul-terminated strings in xstrndup.

    Fix the skipped test counts in the network utility test suite for
    systems that don't have IPv6 configured.  Thanks, Felix Geyer.

    Add -D_FORTIFY_SOURCE=2 to the default warning flags for more checks
    on glibc systems, and fix the resulting warnings in some of the test
    suite programs.

    Update the kerberos.sh and remctl.sh TAP add-ons for the new
    tests/config location of Kerberos configuration and to use test_tmpdir
    for temporary files.

    Add reading of Kerberos username and password configuration to
    kerberos_setup in the Kerberos TAP add-on and always return a struct
    of configuration.  Return the path to the keytab configuration and the
    corresponding principal, if present, and the principal, username,
    realm, and password from a password configuration, if present.
    Support requiring one or both configurations and calling skip_all if
    they're missing.  Remove the alternative implementation of the
    Kerberos utility functions that doesn't require the Kerberos libraries
    and instead use #ifdef inside the primary implementation to handle
    this.

    Significantly improve the remctl TAP add-on.  Get the path to remctld
    from a #define via Makefile.am rather than requiring all test programs
    pass it in.  Shut down remctld automatically at the end of the test
    suite to remove the requirement for explicit cleanup.  Take the
    Kerberos configuration struct from the new kerberos_setup function and
    get the required configuration information from it.  Add support for
    running remctld under fakeroot, and correctly handle shutting down
    remctld when run under fakeroot or valgrind.

    Update to C TAP Harness 1.10:

    * Add bstrndup function to C TAP library.

rra-c-util 4.1 (2011-12-29)

    Remove Kerberos v4 portability code: Autoconf probes, the portability
    header, and the lifetime function replacements.  None of my packages
    support Kerberos v4 any more and I can no longer test this code.

    In the PAM utility library, when Kerberos support is available, fix
    initialization of time values in the module configuration on platforms
    (like S/390X) where krb5_deltat is not equivalent to long.

    Add a replacement for a missing krb5_cc_get_full_name function to the
    Kerberos portability layer.

rra-c-util 4.0 (2011-12-24)

    The fake PAM library for testing now also supports a script-driven
    test infrastructure that uses configuration files to specify the PAM
    options, calls, flags, return status, prompts, responses, and logging
    output and supports callbacks to check the PAM status before it's
    closed.  See tests/fakepam/README for more information.

    The fake PAM library now supports PAM_AUTHTOK, PAM_OLDAUTHTOK, and
    PAM_CONV items and more correctly implements the PAM environment.  It
    also supports intercepting getpwnam calls and returning a synthetic
    structure, and intercepting Kerberos krb5_kuserok calls and using the
    configured home directory to find .k5login.  Log output is now
    returned as an array of strings rather than concatenating all the
    messages together.  The fake PAM library now depends on the TAP
    library and uses its facilities for allocating memory so that memory
    allocation failures are reported with bail.

    Do not call krb5_get_error_message with a NULL context.  Older
    versions of Heimdal will dereference the context unconditionally and
    segfault.

    When logging the entrance to PAM functions in pam-util, convert flags
    into symbolic names.  Also close a memory leak in putil_log_failure
    and allow for systems where __func__ is defined by the system headers
    even though the compiler doesn't indicate a new enough C standard
    version (such as NetBSD).

    When overriding defaults during PAM option parsing in pam-util, free
    any memory allocated for the old settings.

    Add portable/pam.h support for PAM_EXTERN.

    In the Kerberos library probes, probe for both krb5.h and krb5/krb5.h
    and use the latter if the former isn't found.  Add an
    RRA_INCLUDES_KRB5 macro that expands into the headers to use for
    Kerberos probes.  This allows the header to be found on NetBSD
    systems.  Thanks to Fredrik Pettai for the report.

    Fix RRA_LIB_REMCTL_OPTIONAL to not define HAVE_REMCTL even if the
    library wasn't found and to clear the variables used in Makefiles if
    the library isn't found.

    Add a probe for Kerberos kadmin client libraries.  This uses a new
    framework for library probes (m4/lib-helper.m4 and m4/krb5-config.m4)
    that may eventually be used for the other library probes.  Add a
    portability wrapper around kadm5/admin.h and some example probes in
    configure.ac.

    Include config.h in stdbool.h unless it has already been included.

    Add new TAP library add-on that defines basprintf and bvasprintf,
    which wrap asprintf and vasprintf, checking their return status and
    calling bail if they fail.

    The kerberos_setup TAP utility function now expects a test keytab to
    be in tests/config/keytab instead of tests/data/test.keytab and uses
    tests/tmp for the temporary ticket cache.  It no longer needs the
    principal found in the keytab to be explicitly configured in
    tests/data/test.principal; instead, it reads the principal from the
    keytab.

    Add new Kerberos TAP utility functions bail_krb5 and diag_krb5 to
    append a Kerberos error message, kerberos_config_password to return
    Kerberos principal and password information from a file in
    tests/config, and kerberos_keytab_principal to return the first
    principal found in a keytab file (so that the user doesn't have to
    explicitly configure which principal to use once they've created the
    keytab)

    Add a kerberos_generate_conf TAP utility function to generate a
    krb5.conf file for testing.  The last supports changing the default
    realm, removing configuration that may interfere with what's being
    tested, and honoring a krb5.conf file put in tests/config.  It uses a
    helper program, generate-krb5-conf, which must be in tests/data.

    Add a Kerberos TAP utility function that uses the kadmin client
    library to set a password expiration time on a principal for software
    that needs to test behavior of expired passwords.

    Remove mkusage.  This idea turns out to not be as useful as it looked,
    and the package of mine that was previously using it no longer is.

    Update to C TAP Harness 1.9:

    * Add test_tmpdir and test_tmpdir_free to TAP library.
    * runtests now frees all allocated resources on exit.

rra-c-util 3.11 (2011-12-01)

    In the network utility library, when a connection with a timeout
    concludes, properly store the recovered error code in errno where the
    caller can pick it up.  Fix some problems with the test suite for
    connect with timeout on systems where this cannot be tested by using a
    short listen queue.

    Add a portability wrapper around some common APR headers that provides
    macros missing from APR 0.9.

rra-c-util 3.10 (2011-10-31)

    Correctly handle empty vectors in vector_join and cvector_join.
    Thanks to Richard Kettlewell for the test suite addition.

    Fix the syntax of the typedefs for missing socklen_t and
    sig_atomic_t.  Patch from Matthew Loar.

    Provide ssize_t in portable/system.h if the system doesn't define it
    (Windows does not).  Requires an additional check in configure.ac for
    users of portable/system.h.  Patch from Matthew Loar.

    Fix the stripping of -I/usr/include from the output of krb5-config.
    The previous code used extended regular expressions, which cannot be
    relied on inside sed, and would have stripped include paths that start
    with /usr/include.  Just use two sed invocations, with and without a
    trailing space.  Thanks to Ken Dreyer for the report.

    Fix RRA_LIB_KRB5_OPTIONAL to make Kerberos libraries really optional
    when called without --enable-reduced-depends and without setting a
    path to the Kerberos libraries.

    Fix RRA_LIB_REMCTL_OPTIONAL to not require the remctl library be found
    when neither --with-remctl nor --without-remctl was given.

rra-c-util 3.9 (2011-09-23)

    The replacement for the Solaris and BSD function issetugid was
    mistakenly called issetuidgid instead, causing it to always be built.
    Use the correct function name so that the native function is used on
    platforms that provide it.

    Always include gssapi/gssapi_krb5.h in portable/gssapi.h if it's
    available.  Prefer gssapi/gssapi.h to gssapi.h in sample configure
    probes.

    Stop providing or using INADDR_LOOPBACK in the socket portability code
    and instead use htonl(0x7f000001UL).  The byte-order of
    INADDR_LOOPBACK appears to be undefined in practice, so neither using
    it directly nor using it with htonl works reliably.

    Use typedef instead of #define for defining socklen_t and sig_atomic_t
    if they're missing, following the recommendation in the Autoconf
    manual.

    The Kerberos test setup TAP extension now registers its cleanup
    function as an atexit handler so the caller doesn't need to explicitly
    clean up.  It also frees all allocated memory, including the returned
    principal and the stored environment variables, for cleaner valgrind
    analysis.

    In the kinit and shell versions of the Kerberos test setup TAP
    extension, try to suppress getting new AFS tokens in Heimdal so that
    the test doesn't override a user's existing tokens.

    Wait longer for remctld to start in the remctl setup TAP extension to
    allow time for running everything under valgrind.

rra-c-util 3.8 (2011-09-02)

    The network_connect utility functions now take an optional timeout.
    If non-zero, a non-blocking connect is done with that timeout, rather
    than blocking on connect until the TCP stack gives up.  The network
    utility code now depends on the fdflag code.

    Provide a function to free the results of network_bind_all.

    Add an implementation of fdflag_nonblocking for Windows and allow
    fdflag.c to be built on Windows.

    In the generic PAM option parser, add support for time configuration
    options.  If Kerberos is available, these have a type of krb5_deltat
    and are parsed using the Kerberos library routine to parse a time
    interval.  Without Kerberos, they fall back to longs and are parsed as
    numbers.

    Support pam_get_item and pam_set_item in the fake PAM library used for
    testing PAM modules.

    In the Autoconf Kerberos macros, avoid krb5-config and use manual
    library probing if either --with-krb5-include or --with-krb5-lib is
    given.  Similarly avoid use of krb5-config in the GSS-API Autoconf
    macros if --with-gssapi-include or --with-gssapi-lib are given.  One
    generally doesn't specify specific directories like that unless
    krb5-config will be wrong.

    Use PATH_KRB5_CONFIG as the environment variable to set the path to
    krb5-config rather than KRB5_CONFIG in all the Autoconf macros that
    use it (krb5.m4, gssapi.m4, and krb4.m4), since the latter is used by
    the Kerberos libraries to specify an alternative path to krb5.conf.

    Add replacement for krb5_verify_init_creds_opt_init, which is missing
    from the AIX NAS Kerberos implementation in at least some versions.

    Define the C preprocessor symbol HAVE_KERBEROS if RRA_LIB_KRB5 is
    used, rather than only if RRA_LIB_KRB5_OPTIONAL is used and Kerberos
    was found.  This simplifies reuse of code between mandatory-Kerberos
    and optional-Kerberos packages.

    Fix sample configure.ac probe for krb5_kt_free_entry prototype.

    Check for krb5_get_init_creds_opt_set_change_password_prompt,
    krb5_set_password, and krb5_get_init_creds_opt_set_pkinit, replacing
    them as needed, and add new Autoconf macros to handle old
    nine-argument forms of the latter.

    Add RRA_LIB_REMCTL_OPTIONAL to m4/remctl.m4 for packages where the
    remctl dependency is not required.  Define HAVE_REMCTL if remctl is
    present, including when using the non-optional macro.

    Improve the is_function_output TAP add-on interface to take an opaque
    data pointer and pass it into the called function.

    Add a new run_setup TAP add-on function that runs a given command and
    calls bail if it fails, used for doing test setup in an external
    command.  (Some things are easier to do in shell than in C.)

    Define some macros missing from Solaris PAM in portable/pam.h.

    Change Kerberos v5 to just Kerberos in various files.  Version 5 has
    been the default version of Kerberos for over a decade.

    Fix use of long long in portable/mkstemp.c.

    Make the getaddrinfo replacement portable to systems that don't
    declare h_errno and don't define the netdb.h error constants.

    Fix argument type for network_bind_all on Windows.

    Update to C TAP Harness 1.8:

    * Add bmalloc, bcalloc, brealloc, and bstrdup TAP library functions.
    * Fix runtests to honor -s even if BUILD and -b aren't given.

rra-c-util 3.7 (2011-07-25)

    Add a new set of utility functions for managing a data buffer.  A
    buffer dynamically resizes and has a concept of used and unused data,
    making it suitable for buffering and processing data from an input
    stream.  It has associated functions for adding data to the buffer in
    various ways.  Taken from work Russ Allbery did for INN's library,
    based on buffer code originally found in innd.

    Add Autoconf macros for finding build flags for the APR and APR-Util
    libraries.

    Fix error handling when krb5_appdefault_string returns without setting
    the result string.  Fixes a possible segfault during configuration
    parsing on Mac OS X 10.7.

    Abort during configure if building the replacement kafs library on a
    platform that uses regular system calls and afs/param.h is not found.
    The system call interface can't be built without the AFS headers, and
    it's better to fail with a descriptive message at configure time than
    with an obscure message at compile time.

    Include strings.h in portable/system.h if it exists.  Some platforms,
    such as FreeBSD, follow POSIX closely and only define strncasecmp
    here.

    Add ARRAY_SIZE and ARRAY_END macros to util/macros.h.

    Prefer gssapi/gssapi.h to gssapi.h in portable/gssapi.h.  On FreeBSD,
    gssapi.h is marked as deprecated and emits a warning.

    Fix compiler warning in util/messages.c when printing an error about
    failed memory allocation.

    Fix detection of whether the PAM API uses const on FreeBSD.  Thanks to
    Julien ÉLIE for the report and testing.

    When building rra-c-util itself, only build kafs support if
    --enable-kafs is passed to configure.  This avoids having rra-c-util
    fail to build on platforms that require the OpenAFS headers or
    libraries when AFS is not installed.

    Add a pointer to rra-c-util to all files meant to be copied into other
    software packages.

rra-c-util 3.6 (2011-06-07)

    Fix error handling in network_accept_any if select returns with no
    error but without setting any of the sockets as ready.  This should be
    a rare edge case.

    Fix pam_getenvlist in the fakepam testing library to return an empty
    environment instead of NULL when no environment variables have been
    set.

rra-c-util 3.5 (2011-05-31)

    When binding an IPv6-only socket with network_bind_ipv6 and not
    binding to all local addresses, use IP_FREEBIND if it's available.
    This allows binding to addresses that are not yet configured, which is
    much more common with IPv6 given IPv6 autoconfiguration.

    Add new network_accept_any() function, which takes an array of file
    descriptors (similar to what's returned by network_bind_all) and
    blocks accepting incoming connections on any of those file
    descriptors.

    Skip portable/getaddrinfo test on systems where invalid hostnames
    still resolve.

    The remctld_start() function of the TAP remctl add-on now takes
    optional additional arguments to remctld.

rra-c-util 3.4 (2011-05-05)

    The gssapi.m4 fix for Heimdal without libroken was incomplete.  It now
    doesn't attempt to link with libroken when probing for GSS-API
    symbols.  Thanks, Antoine Verheijen.

    Update GCC warning flags for make warnings to 4.6.1, adding
    -Wjump-misses-init, -Wlogical-op, and -Wredundant-decls.

    Remove an unused variable in snprintf testing and properly check the
    return status of xasprintf and xvasprintf.

    Add casts to the pam-util library in places where signed to unsigned
    conversions have been confirmed to not be bugs, in preparation for
    using -Wconversion.  This warning flag is still unused by default due
    a bug in handling htons.

rra-c-util 3.3 (2011-04-28)

    When binding IPv6 sockets, restrict them to only IPv6 connections
    rather than also allowing IPv4 connections where possible.  The
    default behavior, for maximum backward compatibility, is for
    IPv6-bound sockets to accept IPv4 connections and expose those
    connections as IPv4 mapped addresses.  This causes various problems,
    however, such as with reuse of bound ports (which was causing test
    suite failures) and requirements to handle IPv4 mapped addresses.  The
    network model (also used by BSD systems) where IPv6 sockets only
    accept IPv6 connections is cleaner, even if it requires juggling
    multiple sockets in some situations.

    The gssapi.m4 Autoconf macros now handle the bundled Heimdal on
    OpenBSD that doesn't have a separate libroken.  Thanks to Antoine
    Verheijen for the analysis.

    Define the KRB5_USES_COM_ERR Automake conditional to false when
    --without-krb5 is used rather than leaving it undefined, since the
    latter can cause configure failures.  Patch from Andrew Deason.

    Fix underquoting in m4/socket.m4.

    Add a test of krb5_realm to configure.ac so that pam-util will compile
    with Heimdal.  Also fix kafs compilation flags to build properly with
    Heimdal kafs if it's in a non-standard path.

    Update to C TAP Harness 1.7:

    * Add more complete usage message and -h option to runtests.

rra-c-util 3.2 (2011-03-03)

    In the strndup replacement, check if the string being duplicated is
    NULL, and if so, return NULL and set errno to EINVAL rather than
    segfaulting.  Thanks, Carsten Hey.

    Zero sockaddr_in and sockaddr_in6 in the network library before using
    one, just in case non-zeroed padding bytes might cause problems.
    Thanks, Bo Lindbergh.

rra-c-util 3.1 (2011-01-23)

    Add a replacement for a missing strndup (not available on Mac OS X).

    Fix compilation of the embedded kafs layer for Mac OS X 10.6 and
    hopefully fix detection of whether AFS is present.  Thanks, Andy
    Cobaugh.

    Add vector_copy, vector_exec, and vector_exec_env to the pam-util
    vector library.  Fix vector_clear to not attempt to free strings that
    are NULL.  Fix broken GCC attribute markers on the pam-util vector
    library, which could cause compilation problems with non-GCC
    compilers.

    Add a new type of configuration parameter to the pam-util option
    parser that stores a vector but takes its default value as a string
    (which will be split the way that a PAM option setting would be
    split).

    When probing for Kerberos libraries, always add any supplemental
    libraries found to that point to the link command.  This will fix
    configure failures on platforms without working transitive shared
    library dependencies.

    When probing for <ibm_svc/krb5_svc.h> (part of AIX's bundled Kerberos
    implementation), include <krb5.h> before attempting to include that
    header to quiet confusing Autoconf warnings.  Reported by Wilfried
    Weiss.

    Add explicit license statements to the files meant to be copied into
    other packages rather than referring to LICENSE.

rra-c-util 3.0 (2010-12-29)

    Add a PAM utility library to assist in developing PAM modules.  This
    utility library provides functions for logging and table-driven option
    parsing, including reading options from krb5.conf.  It also provides a
    version of the util/vector.c library that doesn't die on memory
    allocation failure and hence is suitable for use in PAM modules.

    Add a fake PAM library used for testing PAM modules.  This fake PAM
    library provides just enough of the PAM library functionality to make
    PAM module function calls into a single module, but doesn't look at
    the system-wide configuration, allowing PAM modules to be more easily
    tested without changes to the system configuration.  It also allows
    test programs to inspect the internals of the PAM state.

    Add untested support for the ioctl AFS system call methods on Mac OS X
    and Solaris 11 to the kafs replacement library.

    Add a replacement for k_haspag for use with either the kafs
    replacement library or for systems with a libkafs or libkopenafs that
    don't have that function.

    Export k_pioctl from the kafs replacement library and provide a
    definition of struct ViceIoctl.  This is mainly for the use of
    k_haspag, but may prove useful for making other AFS system calls.

    Move kafs/kafs.h to portable/kafs.h, since it's more a portability
    header than a header solely for the kafs replacement library.

    Fix the --with-libkafs-lib and --with-libkafs-include configure
    options to work properly.

    Properly include prerequisite Kerberos and ioctl headers before
    including the Heimdal kafs.h header.

    Add handling of krb5_free_default_realm and krb5_init_secure_context
    to the Kerberos portability layer.

    Add a replacement for missing krb5_appdefault_* functions for
    compatibility with AIX's included Kerberos, which provides the profile
    library but not the Kerberos interface to query it.

    Fix broken GCC attribute markers causing problems with compilation on
    Windows (and likely any non-GCC compiler).

    Update to C TAP Harness 1.6:

    * Better error handling if BUILD or SOURCE aren't set.
    * Flush standard error before results in the C TAP library.
    * Improve test failure output formatting in some edge cases.

rra-c-util 2.7 (2010-09-20)

    For Kerberos and GSS-API checks, look for krb5-config in
    /usr/kerberos/bin after checking the user's PATH.  This is the default
    location on Red Hat Enterprise prior to RHEL6.

    Enable all configure logic in configure.ac that was previously
    commented out so that it is tested when building rra-c-util.  Building
    this package directly will now require working GSS-API libraries, but
    since it already required working Kerberos libraries, this should not
    make a noticable difference.

rra-c-util 2.6 (2010-08-25)

    Add portability code for old MIT Kerberos and Heimdal libraries
    without krb5_get_init_creds_opt_free.

    When probing for Apache module build flags, call apr-config --includes
    and add it to the preprocessor flags.  Fixes build failures on Red Hat
    Enterprise Linux 4 and 5.

    When probing for UNIX domain sockets, include <sys/types.h> before
    <sys/socket.h> so that the test program compiles on OpenBSD.  Thanks,
    Wim Lewis.

    Add new test library function ktutil_list to output details of the
    contents of a keytab, used to compare two keytabs.

    Fix determination of the test principal in the kerberos.sh and
    remctl.sh test libraries.

    Properly include the Apache, cURL, OpenLDAP, OpenSSL, PCRE, and ld
    --version-script M4 checks in the distribution.

rra-c-util 2.5 (2010-07-07)

    Add an Autoconf macro set to locate the compiler and linker flags for
    Apache modules, allowing those modules to be built without using apxs
    to do the compilation and linking.

    Add Autoconf macros for detecting cURL, OpenLDAP, and OpenSSL
    libraries.

    Add an Autoconf macro that checks whether the linker supports the
    --version-script flag with a simple version script that just assigns
    symbol versions and marks some symbols as local.

    Add vector_split_multi and cvector_split_multi functions to
    util/vector.h, which split a string into a vector using any character
    found in a string of separators as a separator.

    Add a replacement for the Solaris issetuidgid function.

    Add Kerberos portability glue for krb5_data_free versus
    krb5_free_data_contents and improve checking for krb5_kt_free_entry
    with older versions of MIT Kerberos.

    The krb5.m4 Autoconf macros now handle the bundled Heimdal on OpenBSD
    that doesn't have a separate libroken.  If KRB5_CPPFLAGS,
    KRB5_LDFLAGS, or KRB5_LIBS are set before calling the macro, their
    values will be preserved and added to whatever the macro sets, which
    allows the caller to set up custom values for particular operating
    systems.

    Restore the default CPPFLAGS, LDFLAGS, and LIBS after probing for
    GSS-API libraries with --enable-reduced-depends.  Previously, the
    default variables were left containing extra GSS-API-specific flags.

    Allow users to suppress including config.h in portable/krb5.h so that
    the Kerberos portability code can be used in situations where a
    stripped-down config.h is needed, such as Apache modules.

    Update to C TAP Harness 1.4:

    * Add tests/HOWTO from docs/writing-tests in C TAP Harness.
    * Add okv and test_file_path functions to the basic TAP library.
    * Use test_file_path in kerberos_setup, kerberos.sh, and remctl.sh.

rra-c-util 2.4 (2010-04-22)

    Add Autoconf macros to probe for the PCRE library, using pcre-config
    where possible and falling back on direct probing.

    Fix definition of replacement krb5_free_error_message to not be
    static.

    Fix header guard for util/xwrite.h.  Previously, the header would be
    incorrectly skipped if util/xmalloc.h was already included.

    Update to C TAP Harness 1.2:

    * Add diag and sysdiag functions to the basic TAP library.
    * Clean up data types in the basic C TAP library.
    * Add the GCC nonnull attribute to the TAP library bail functions.

rra-c-util 2.3 (2010-02-15)

    Add a portability layer for the Kerberos API, which supplies something
    close to the Heimdal Kerberos API on either MIT or Heimdal and adjusts
    with functions missing from older versions.  Use it in the Kerberos
    TAP test module.

    Add die and warn wrappers for Kerberos errors to the utility library.

    Add a portability wrapper around PAM libraries and replacements for
    pam_syslog and pam_vsyslog, and an Autoconf macro to determine whether
    the PAM library headers use const.

    Add a new TAP add-on for running a function in a separate process and
    then checking its exit status and output.

    Disable the xmalloc test except for maintainers.  It's too fragile,
    and isn't catching problems with xmalloc itself.

    Adjust the Kerberos TAP test library add-ons for the split of
    util/util.h.

rra-c-util 2.2 (2010-01-18)

    Break util/util.h apart into separate header files for every utility
    function grouping.  This requires include changes in all packages
    importing rra-c-util, but makes it much easier to update header file
    changes for only those components that a downstream package users.

    Add the GCC function attributes alloc_size, malloc, and nonnull to the
    prototypes for utility functions where appropriate, and add the format
    attribute to xasprintf.

    kafs/kafs.h now defines HAVE_KAFS if any form of AFS support is
    available.  This allows programs using it to, for instance, display
    different help output based on whether AFS support is compiled in (as
    opposed to available on the current system, which is what k_hasafs
    determines).

    Improve error handling when network_connect or network_client_create
    are called with an unknown address domain for the source address.

    Switch to AC_TYPE_LONG_LONG_INT instead of AC_CHECK_TYPES([long long])
    as provided by newer Autoconfs, and change the snprintf replacement to
    assume the compiler provides long double.

    Remove unnecessary dependencies on the util library in the portable
    test suite.

rra-c-util 2.1 (2009-11-25)

    Add a new Autoconf macro, RRA_SET_LIBDIR, which sets the libdir
    variable based on the size of an integer in the compilation
    environment and whether /usr/lib32 or /usr/lib64 exist.

    Use a socket_type typedef rather than int directly to store the file
    descriptors of sockets and, on Windows, typedef that to SOCKET instead
    of int.  Update the function signatures of the network utility
    functions appropriately.  Compare socket_type variables against an
    INVALID_SOCKET define instead of -1.  Fixes portability issues to
    64-bit Windows.  Thanks, Jeffrey Altman.

    Add a cast to the log handler for Windows so that it works properly on
    64-bit Windows.  Thanks, Jeffrey Altman.

rra-c-util 2.0 (2009-08-15)

    Add a replacement for the libkafs library for AFS PAG and token
    manipulation.  This is a minimal version of the library with no
    external dependencies on Linux and only minimal AFS dependencies on
    other platforms that implements just enough of libkafs functionality
    to support pam-afs-session and kstart.  This is a somewhat-modified
    version of the kafs replacement files in kstart 3.14 that uses a
    separate library directory and Automake conditionals rather than
    AC_LIBOBJ and the portable directory and supports more specific
    configure options.

    Revert the separation of the message functions that call exit into a
    separate source file.  Unfortunately, even as a separate source file,
    it's still linked into shared libraries, so the additional code
    duplication isn't worth it.

    Add a replacement for mkstemp on systems that don't have it.

    If krb5-config produces results that don't work for Kerberos v5 of
    GSS-API probes, fall back on manual library probing rather than just
    failing.  This fixes problems with GSS-API probes on Solaris where
    krb5-config is present but doesn't know about GSS-API.  Thanks to Andy
    Cobaugh for the report.

    Suppress error output from krb5-config in Kerberos v5 and GSS-API
    probes so that it's not mixed in with configure output.

    Do not try to use a non-executable krb5-config for GSS-API probes and
    prefer the KRB5_CONFIG environment variable over a path constructed
    from the --with-gssapi argument.

    Add m4/krb4.m4, which probes for Kerberos v4 libraries in the same
    ways that m4/krb5.m4 probes for Kerberos v5 libraries.

    Add a portability wrapper around Kerberos v4 headers and replacements
    for Kerberos v4 lifetime functions for implementations that don't have
    them.

    Add m4/socket-unix.m4, which contains some probes for UNIX domain
    socket support taken from INN with modifications by Julien ÉLIE.

    RRA_SET_LDFLAGS (m4/lib-pathname.m4) now appends to the variable
    rather than only setting it and takes an optional third argument
    naming a subdirectory of the library directory to add to the library
    search path.

    Enable GCC format string checking for the replacement asprintf
    function.

    Use AS_HELP_STRING instead of the deprecated AC_HELP_STRING in all
    Autoconf m4 files.

    Fix network test suite failures when IPv6 is available but disabled
    in the kernel.

    Enable Automake silent rules.  For a quieter build, pass the
    --enable-silent-rules option to configure or build with make V=0.

    Update to C TAP Harness 1.1:

    * Summarize results at the end of test executions.
    * Consume all output from a test case before closing its descriptor.

rra-c-util 1.0 (2009-05-22)

    Initial public release based on the portability code that shipped with
    remctl 2.13 with some additional files from other current releases of
    my software packages.  The changes below are relative to that version.

    Separate out the message functions that call exit to a separate source
    file and therefore a separate object file.  This will mean that shared
    libraries that don't call die won't link this file and hence won't
    include a reference to exit, which will avoid errors from some package
    test tools.

    Add a vector_addn function that adds a counted string to a vector
    (similar to strndup).  There is no cvector equivalent.

    On BSD/OS, despite the AI_ADDRCONFIG flag being present in the system
    headers, passing it into getaddrinfo results in an error.  Test for
    this at configure time and, if it doesn't work, hide the system
    AI_ADDRCONFIG definition.

    Remove RRA_LIB_*_SET functions.  When using Automake, one should never
    put one's own flags into the CPPFLAGS, CFLAGS, and LDFLAGS variables,
    since the user may override them.  Instead, AM_* versions should be
    set in Makefile.am.  This can be done using the existing substitution
    variables, so the *_SET functions were always wrong.

    Declare message_fatal_cleanup extern in util.h.  Fixes compilation
    problems on Mac OS X and probably elsewhere.

    Update GSS-API probes for portability to Solaris 10's native generic
    GSS-API libraries.  Thanks, Peter Eriksson.

    Change from AC_TRY_* to AC_*_IFELSE for all Autoconf macros.

    Update the example configure.ac for Autoconf 2.63, adding
    AC_CONFIG_MACRO_DIR and using AC_USE_SYSTEM_EXTENSIONS instead of
    AC_AIX and AC_GNU_SOURCE.

    Specify a mode when creating a sentinel in the daemon test.  This
    fixes compiler warnings with newer gcc.

    Updated test suite to the current version of C TAP Harness and its C
    TAP library.  Rewrite the extra functions that were in libtest as
    add-ons to the TAP library.

    Add a TAP test library Kerberos initialization function to use the
    native Kerberos library functions as well as a version that calls
    kinit.  The former will be more useful for packages that already
    depend on the Kerberos libraries.

    Add TAP test library functions to clean up the Kerberos ticket cache
    and to cleanly shut down remctld.

    Add TAP shell libraries for initializing Kerberos and starting and
    stopping remctld.

    Make the xmalloc test suite robust against builddir != srcdir builds
    that change the default file name of the test program.
