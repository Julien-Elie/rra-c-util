                     User-Visible rra-c-util Changes

rra-c-util 2.3 (unreleased)

    Add a portability layer for the Kerberos API, which supplies something
    close to the Heimdal Kerberos API on either MIT or Heimdal and adjusts
    with functions missing from older versions.  Use it in the Kerberos
    TAP test module.

    Add die and warn wrappers for Kerberos errors to the utility library.

    Add a new TAP add-on for running a function in a separate process and
    then checking its exit status and output.

    Disable the xmalloc test except for maintainers.  It's too fragile,
    and isn't catching problems with xmalloc itself.

    Adjust the Kerberos TAP test library add-ons for the split of
    util/util.h.

rra-c-util 2.2 (2010-01-18)

    Break util/util.h apart into separate header files for every utility
    function grouping.  This requires include changes in all packages
    importing rra-c-util, but makes it much easier to update header file
    changes for only those components that a downstream package users.

    Add the GCC function attributes alloc_size, malloc, and nonnull to the
    prototypes for utility functions where appropriate, and add the format
    attribute to xasprintf.

    kafs/kafs.h now defines HAVE_KAFS if any form of AFS support is
    available.  This allows programs using it to, for instance, display
    different help output based on whether AFS support is compiled in (as
    opposed to available on the current system, which is what k_hasafs
    determines).

    Improve error handling when network_connect or network_client_create
    are called with an unknown address domain for the source address.

    Switch to AC_TYPE_LONG_LONG_INT instead of AC_CHECK_TYPES([long long])
    as provided by newer Autoconfs, and change the snprintf replacement to
    assume the compiler provides long double.

    Remove unnecessary dependencies on the util library in the portable
    test suite.

rra-c-util 2.1 (2009-11-25)

    Add a new Autoconf macro, RRA_SET_LIBDIR, which sets the libdir
    variable based on the size of an integer in the compilation
    environment and whether /usr/lib32 or /usr/lib64 exist.

    Use a socket_type typedef rather than int directly to store the file
    descriptors of sockets and, on Windows, typedef that to SOCKET instead
    of int.  Update the function signatures of the network utility
    functions appropriately.  Compare socket_type variables against an
    INVALID_SOCKET define instead of -1.  Fixes portability issues to
    64-bit Windows.  Thanks, Jeffrey Altman.

    Add a cast to the log handler for Windows so that it works properly on
    64-bit Windows.  Thanks, Jeffrey Altman.

rra-c-util 2.0 (2009-08-15)

    Add a replacement for the libkafs library for AFS PAG and token
    manipulation.  This is a minimal version of the library with no
    external dependencies on Linux and only minimal AFS dependencies on
    other platforms that implements just enough of libkafs functionality
    to support pam-afs-session and kstart.  This is a somewhat-modified
    version of the kafs replacement files in kstart 3.14 that uses a
    separate library directory and Automake conditionals rather than
    AC_LIBOBJ and the portable directory and supports more specific
    configure options.

    Revert the separation of the message functions that call exit into a
    separate source file.  Unfortunately, even as a separate source file,
    it's still linked into shared libraries, so the additional code
    duplication isn't worth it.

    Add a replacement for mkstemp on systems that don't have it.

    If krb5-config produces results that don't work for Kerberos v5 of
    GSS-API probes, fall back on manual library probing rather than just
    failing.  This fixes problems with GSS-API probes on Solaris where
    krb5-config is present but doesn't know about GSS-API.  Thanks to Andy
    Cobaugh for the report.

    Suppress error output from krb5-config in Kerberos v5 and GSS-API
    probes so that it's not mixed in with configure output.

    Do not try to use a non-executable krb5-config for GSS-API probes and
    prefer the KRB5_CONFIG environment variable over a path constructed
    from the --with-gssapi argument.

    Add m4/krb4.m4, which probes for Kerberos v4 libraries in the same
    ways that m4/krb5.m4 probes for Kerberos v5 libraries.

    Add a portability wrapper around Kerberos v4 headers and replacements
    for Kerberos v4 lifetime functions for implementations that don't have
    them.

    Add m4/socket-unix.m4, which contains some probes for UNIX domain
    socket support taken from INN with modifications by Julien Ã‰LIE.

    RRA_SET_LDFLAGS (m4/lib-pathname.m4) now appends to the variable
    rather than only setting it and takes an optional third argument
    naming a subdirectory of the library directory to add to the library
    search path.

    Enable GCC format string checking for the replacement asprintf
    function.

    Use AS_HELP_STRING instead of the deprecated AC_HELP_STRING in all
    Autoconf m4 files.

    Fix network test suite failures when IPv6 is available but disabled
    in the kernel.

    Enable Automake silent rules.  For a quieter build, pass the
    --enable-silent-rules option to configure or build with make V=0.

    Update to C TAP Harness 1.1:

    * Summarize results at the end of test executions.
    * Consume all output from a test case before closing its descriptor.

rra-c-util 1.0 (2009-05-22)

    Initial public release based on the portability code that shipped with
    remctl 2.13 with some additional files from other current releases of
    my software packages.  The changes below are relative to that version.

    Separate out the message functions that call exit to a separate source
    file and therefore a separate object file.  This will mean that shared
    libraries that don't call die won't link this file and hence won't
    include a reference to exit, which will avoid errors from some package
    test tools.

    Add a vector_addn function that adds a counted string to a vector
    (similar to strndup).  There is no cvector equivalent.

    On BSD/OS, despite the AI_ADDRCONFIG flag being present in the system
    headers, passing it into getaddrinfo results in an error.  Test for
    this at configure time and, if it doesn't work, hide the system
    AI_ADDRCONFIG definition.

    Remove RRA_LIB_*_SET functions.  When using Automake, one should never
    put one's own flags into the CPPFLAGS, CFLAGS, and LDFLAGS variables,
    since the user may override them.  Instead, AM_* versions should be
    set in Makefile.am.  This can be done using the existing substitution
    variables, so the *_SET functions were always wrong.

    Declare message_fatal_cleanup extern in util.h.  Fixes compilation
    problems on Mac OS X and probably elsewhere.

    Update GSS-API probes for portability to Solaris 10's native generic
    GSS-API libraries.  Thanks, Peter Eriksson.

    Change from AC_TRY_* to AC_*_IFELSE for all Autoconf macros.

    Update the example configure.ac for Autoconf 2.63, adding
    AC_CONFIG_MACRO_DIR and using AC_USE_SYSTEM_EXTENSIONS instead of
    AC_AIX and AC_GNU_SOURCE.

    Specify a mode when creating a sentinel in the daemon test.  This
    fixes compiler warnings with newer gcc.

    Updated test suite to the current version of C TAP Harness and its C
    TAP library.  Rewrite the extra functions that were in libtest as
    add-ons to the TAP library.

    Add a TAP test library Kerberos initialization function to use the
    native Kerberos library functions as well as a version that calls
    kinit.  The former will be more useful for packages that already
    depend on the Kerberos libraries.

    Add TAP test library functions to clean up the Kerberos ticket cache
    and to cleanly shut down remctld.

    Add TAP shell libraries for initializing Kerberos and starting and
    stopping remctld.

    Make the xmalloc test suite robust against builddir != srcdir builds
    that change the default file name of the test program.
